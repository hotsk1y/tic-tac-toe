{"version":3,"sources":["components/Cell/Cell.jsx","components/Field/Field.jsx","components/Game/Game.jsx","healper.js","components/Menu/Menu.jsx","App.js","index.js"],"names":["Cell","props","className","onClick","handleClick","value","Field","cells","map","cell","i","Game","isAgainstTheComputer","xIsRunMenu","xIsRun","setxIsRun","turn","setTurn","useState","Array","fill","field","setField","scoreX","setScoreX","scoreO","setScoreO","scoreDraw","setScoreDraw","winner","win_lines","length","a","b","c","calculateWinner","useEffect","scoreXCopy","scoreOCopy","scoreDrawCopy","changeTheScore","index","fieldCopy","newTurn","push","clickIndex","fieldAfterPlayer","computerTurn","Math","floor","random","console","log","Menu","setMenuActive","setIsAgainstTheComputer","setxIsRunMenu","disabledInput","htmlFor","id","type","disabled","checked","onChange","e","target","App","menuActive","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb43095b.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Cell.css'\r\n\r\nconst Cell = (props) => {\r\n  return(\r\n    <div className=\"cell\" onClick={props.handleClick}>\r\n      {props.value}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cell","import React from 'react'\r\nimport './Field.css'\r\nimport Cell from '../Cell/Cell'\r\n\r\nconst Field = ({cells, handleClick}) => {\r\n  return(\r\n    <div className=\"field\">\r\n      {\r\n        cells.map((cell, i) => {\r\n          return (\r\n            <Cell key={i} value={cell} handleClick={() => handleClick(i)} />\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Field","import React, { useState, useEffect } from 'react'\r\nimport './Game.css'\r\nimport Field from '../Field/Field'\r\nimport { calculateWinner } from '../../healper'\r\n\r\nconst Game = ({ isAgainstTheComputer, xIsRunMenu, xIsRun, setxIsRun, turn, setTurn }) => {\r\n  const [field, setField] = useState(Array(9).fill(null))\r\n  const [scoreX, setScoreX] = useState(0)\r\n  const [scoreO, setScoreO] = useState(0)\r\n  const [scoreDraw, setScoreDraw] = useState(0)\r\n\r\n  let winner = calculateWinner(field)\r\n\r\n  const changeTheScore = () => {\r\n    if (winner === 'X') {\r\n      let scoreXCopy = scoreX\r\n      scoreXCopy++\r\n      setScoreX(scoreXCopy)\r\n    } else if (winner === 'O') {\r\n      let scoreOCopy = scoreO\r\n      scoreOCopy++\r\n      setScoreO(scoreOCopy)\r\n    }\r\n    if (turn.length === 9 && !winner) {\r\n      let scoreDrawCopy = scoreDraw\r\n      scoreDrawCopy++\r\n      setScoreDraw(scoreDrawCopy)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    changeTheScore()\r\n  }, [turn.length, winner])\r\n\r\n\r\n  const handleClick = index => {\r\n    const fieldCopy = [...field]\r\n    // ?game-over, ?click\r\n    if (winner || fieldCopy[index]) {\r\n      return null\r\n    }\r\n    // X ? Y\r\n    fieldCopy[index] = xIsRun ? 'X' : 'O'\r\n    // update state\r\n    setField(fieldCopy)\r\n    setxIsRun(!xIsRun)\r\n\r\n    const newTurn = turn\r\n    newTurn.push(fieldCopy[index])\r\n    setTurn(newTurn)\r\n    if (newTurn.length === 9) {\r\n      if (winner) {\r\n        return null\r\n      }\r\n    }\r\n  }\r\n\r\n  const computerTurn = (clickIndex, fieldAfterPlayer) => {\r\n    let fieldCopy = [...fieldAfterPlayer]\r\n    let computerTurn = Math.floor(Math.random() * 9)\r\n    const newTurn = turn\r\n\r\n    while (clickIndex === computerTurn || fieldCopy[computerTurn] !== null) {\r\n      computerTurn = Math.floor(Math.random() * 9)\r\n    }\r\n    if (winner || fieldCopy[computerTurn]) return null\r\n    fieldCopy[computerTurn] = !xIsRun ? 'X' : 'O'\r\n    console.log(`computerTurn: ${computerTurn}`)\r\n    setField(fieldCopy)\r\n    newTurn.push(fieldCopy[computerTurn])\r\n    console.log(newTurn)\r\n  }\r\n\r\n  const playerTurn = (index) => {\r\n    let fieldCopy = [...field]\r\n    const newTurn = turn\r\n    // ?game-over, ?click\r\n    if (winner || fieldCopy[index]) return null\r\n    // X ? Y\r\n    fieldCopy[index] = xIsRun ? 'X' : 'O'\r\n    setField(fieldCopy)\r\n    newTurn.push(fieldCopy[index])\r\n    setTurn(newTurn)\r\n\r\n    if (newTurn.length === 9) {\r\n      if (winner) {\r\n        return null\r\n      }\r\n    } else {\r\n      computerTurn(index, fieldCopy)\r\n    }\r\n  }\r\n\r\n  const startNewGame = () => {\r\n    return (\r\n      <button className='start-game__btn'\r\n        onClick={() =>\r\n            setField(Array(9).fill(null),\r\n            setTurn([]),\r\n            setxIsRun(xIsRunMenu)\r\n          )}>Start New Game</button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='game-wrapper'>\r\n      <div className=\"score\">\r\n        <div className=\"score_descr\">\r\n          <div>X</div>\r\n          <div>Draw</div>\r\n          <div>O</div>\r\n        </div>\r\n        <div className=\"score_item\">\r\n          <div>{scoreX}</div>\r\n          <div>{scoreDraw}</div>\r\n          <div>{scoreO}</div>\r\n        </div>\r\n      </div>\r\n      {startNewGame()}\r\n      <Field cells={field} handleClick={isAgainstTheComputer ? playerTurn : handleClick} />\r\n      <p className=\"field__info\">\r\n        {\r\n          winner ? `${winner} is the winner!` : (turn.length === 9 ? `Draw!` : `Your turn: ${xIsRun ? 'X' : 'O'}`)\r\n        }\r\n      </p>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Game","export const calculateWinner = (cells) => {\r\n  const win_lines = [\r\n    [0, 1, 2],\r\n\t\t[3, 4, 5],\r\n\t\t[6, 7, 8],\r\n\t\t[0, 3, 6],\r\n\t\t[1, 4, 7],\r\n\t\t[2, 5, 8],\r\n\t\t[0, 4, 8],\r\n\t\t[2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < win_lines.length; i++) {\r\n    const [a, b, c] = win_lines[i]\r\n    if (cells[a] && cells[a] === cells[b] && cells[a] === cells[c] ) {\r\n      return cells[a]\r\n    }\r\n  }\r\n  return null\r\n}","import React from 'react'\r\nimport './Menu.css'\r\n\r\nconst Menu = ({ setMenuActive,\r\n  isAgainstTheComputer,\r\n  setIsAgainstTheComputer,\r\n  setxIsRun,\r\n  xIsRunMenu,\r\n  setxIsRunMenu,\r\n  turn\r\n}) => {\r\n\r\n  let disabledInput = false\r\n  turn.length >=1 ? disabledInput = true : disabledInput = false\r\n\r\n  return (\r\n    <div className=\"menu\">      \r\n      <div className=\"close-menu__btn\" onClick={() => setMenuActive(false)}>X</div>\r\n      <div className=\"main-menu__content\">\r\n      <div className=\"title\"><h1>Tic Tac Toe Settings</h1></div>\r\n        <div className=\"content-item chekbox-content__item\">\r\n          <label htmlFor=\"computerTurn\">Player VS Bot: </label>\r\n          <input id=\"computerTurn\" type=\"checkbox\" disabled={disabledInput} checked={isAgainstTheComputer} onChange={(e) =>\r\n            setIsAgainstTheComputer(e.target.checked)} />\r\n        </div>\r\n        <div className=\"content-item chekbox-content__item\">\r\n          <label htmlFor=\"xIsRun\">X runs first: </label> \r\n          <input className='chekbox-content__item' id=\"xIsRun\" type=\"checkbox\" disabled={disabledInput} checked={xIsRunMenu}\r\n            onChange={(e) => {\r\n              setxIsRunMenu(e.target.checked)\r\n              setxIsRun(e.target.checked)\r\n            }} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Menu","import React, { useState } from 'react'\nimport './App.css';\nimport Game from './components/Game/Game'\nimport Menu from './components/Menu/Menu'\n\nfunction App() {\n  const [menuActive, setMenuActive] = useState(false)\n  const [isAgainstTheComputer, setIsAgainstTheComputer] = useState(false)\n  const [xIsRunMenu, setxIsRunMenu] = useState(true)\n  const [xIsRun, setxIsRun] = useState(xIsRunMenu)\n  const [turn, setTurn] = useState([])\n\n  return (\n    <div className=\"main-page\">\n      <div className=\"menu__settings-logo\" onClick={() => setMenuActive(!menuActive)}>\n        <img src=\"images/settings.svg\" alt=\"\"/>\n      </div>\n      <div className={menuActive ? \"main-menu active\" : \"main-menu\"}>\n        <Menu menuActive={menuActive} \n        setMenuActive={setMenuActive} \n        setIsAgainstTheComputer={setIsAgainstTheComputer}\n        isAgainstTheComputer={isAgainstTheComputer}\n        xIsRunMenu={xIsRunMenu}\n        setxIsRunMenu={setxIsRunMenu}\n        xIsRun={xIsRun}\n        setxIsRun={setxIsRun}\n        turn={turn} />\n      </div>\n      <Game \n        isAgainstTheComputer={isAgainstTheComputer}\n        xIsRunMenu={xIsRunMenu}\n        xIsRun={xIsRun}\n        setxIsRun={setxIsRun}\n        turn={turn}\n        setTurn={setTurn} />        \n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}