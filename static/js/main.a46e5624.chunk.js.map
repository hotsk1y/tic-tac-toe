{"version":3,"sources":["components/Cell/Cell.jsx","components/Field/Field.jsx","store/reducers/fieldReducer.js","store/reducers/settingsReducer.js","store/reducers/scoreReducer.js","healper.js","constants.js","components/Game/Game.jsx","components/Menu/Menu.jsx","App.js","store/reducers/rootReducer.js","store/store.js","index.js"],"names":["Cell","props","className","onClick","handleClick","value","Field","cells","map","cell","i","defaultFieldState","field","Array","fill","START_NEW_GAME","CHANGE_FIELD","startNewGameAction","payload","type","defaultState","isAgainstTheComputer","menuActive","xIsRunMenu","xIsRun","turn","BOT_ACTIVE","MENU_ACTIVE","X_IS_RUN_MENU","X_IS_RUN","SET_TURN","setMenuActiveAction","setTurnAction","setxIsRunAction","defaultScoreState","scoreDraw","scoreX","scoreO","ADD_X","ADD_O","ADD_DRAW","RESET_SCORE","checkWinner","board","player","runSymbolO","runSymbolX","Game","aiPlayer","dispatch","useDispatch","useSelector","state","settings","setxIsRun","setTurn","setField","index","changeFieldAction","score","setScoreDraw","setScoreX","setScoreO","humanPlayer","undefined","fieldWithIndex","length","winner","computerRandomTurn","Math","floor","random","fieldCopy","newTurn","push","useEffect","searchAlgorithm","emptyCells","filter","s","findEmptyCells","moves","move","idx","bestMove","bestScore","Infinity","fieldAfterPlayer","computerTurn","Menu","setIsAgainstTheComputer","setIsAgainstTheComputerAction","setxIsRunMenu","setxIsRunMenuAction","resetScore","startNewGame","disabledInput","htmlFor","id","disabled","checked","onChange","e","target","App","src","alt","rootReducer","combineReducers","action","newField","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a46e5624.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Cell.css'\r\n\r\nconst Cell = (props) => {\r\n  return (\r\n    <div className=\"cell\" onClick={props.handleClick}>\r\n      {props.value}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cell\r\n","import React from 'react'\r\nimport './Field.css'\r\nimport Cell from '../Cell/Cell'\r\n\r\nconst Field = ({ cells, handleClick }) => {\r\n  return (\r\n    <div className=\"field\">\r\n      {cells.map((cell, i) => {\r\n        return <Cell key={i} value={cell} handleClick={() => handleClick(i)} />\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Field\r\n","const defaultFieldState = {\r\n  field: Array(9).fill(null),\r\n}\r\n\r\nexport const START_NEW_GAME = 'START_NEW_GAME'\r\nexport const CHANGE_FIELD = 'CHANGE_FIELD'\r\n\r\nexport const fieldReducer = (state = defaultFieldState, action) => {\r\n  switch (action.type) {\r\n  case START_NEW_GAME:\r\n    return { ...state, field: defaultFieldState.field }\r\n\r\n  case CHANGE_FIELD: {\r\n    let newField = [...state.field]\r\n    newField[action.index] = action.payload\r\n    return { ...state, field: newField }\r\n  }\r\n\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const startNewGameAction = (payload) => ({\r\n  type: START_NEW_GAME,\r\n  payload,\r\n})\r\n\r\nexport const changeFieldAction = (payload, index) => ({\r\n  type: CHANGE_FIELD,\r\n  payload,\r\n  index,\r\n})\r\n","const defaultState = {\r\n  isAgainstTheComputer: true,\r\n  menuActive: false,\r\n  xIsRunMenu: true,\r\n  xIsRun: true,\r\n  turn: [],\r\n}\r\n\r\nexport const BOT_ACTIVE = 'BOT_ACTIVE'\r\nexport const MENU_ACTIVE = 'MENU_ACTIVE'\r\nexport const X_IS_RUN_MENU = 'X_IS_RUN_MENU'\r\nexport const X_IS_RUN = 'X_IS_RUN'\r\nexport const SET_TURN = 'SET_TURN'\r\n\r\nexport const settingsReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n  case BOT_ACTIVE:\r\n    return { ...state, isAgainstTheComputer: action.payload }\r\n\r\n  case MENU_ACTIVE:\r\n    return { ...state, menuActive: action.payload }\r\n\r\n  case X_IS_RUN_MENU:\r\n    return { ...state, xIsRunMenu: action.payload }\r\n\r\n  case X_IS_RUN:\r\n    return { ...state, xIsRun: action.payload }\r\n\r\n  case SET_TURN:\r\n    return { ...state, turn: action.payload }\r\n\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const setIsAgainstTheComputerAction = (payload) => ({\r\n  type: BOT_ACTIVE,\r\n  payload,\r\n})\r\n\r\nexport const setMenuActiveAction = (payload) => ({\r\n  type: MENU_ACTIVE,\r\n  payload,\r\n})\r\n\r\nexport const setxIsRunMenuAction = (payload) => ({\r\n  type: X_IS_RUN_MENU,\r\n  payload,\r\n})\r\n\r\nexport const setTurnAction = (payload) => ({\r\n  type: SET_TURN,\r\n  payload,\r\n})\r\n\r\nexport const setxIsRunAction = (payload) => ({\r\n  type: X_IS_RUN,\r\n  payload,\r\n})\r\n","const defaultScoreState = {\r\n  scoreDraw: 0,\r\n  scoreX: 0,\r\n  scoreO: 0,\r\n}\r\n\r\nexport const ADD_X = 'ADD_X'\r\nexport const ADD_O = 'ADD_O'\r\nexport const ADD_DRAW = 'ADD_DRAW'\r\nexport const RESET_SCORE = 'RESET_SCORE'\r\n\r\nexport const scoreReducer = (state = defaultScoreState, action) => {\r\n  switch (action.type) {\r\n  case ADD_X:\r\n    return { ...state, scoreX: state.scoreX + 1 }\r\n  case ADD_O:\r\n    return { ...state, scoreO: state.scoreO + 1 }\r\n  case ADD_DRAW:\r\n    return { ...state, scoreDraw: state.scoreDraw + 1 }\r\n  case RESET_SCORE:\r\n    return { ...state, scoreDraw: (state.scoreDraw = 0), scoreX: 0, scoreO: 0 }\r\n\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const setScoreDrawAction = (payload) => ({\r\n  type: ADD_DRAW,\r\n  payload,\r\n})\r\n\r\nexport const setScoreXAction = (payload) => ({\r\n  type: ADD_X,\r\n  payload,\r\n})\r\n\r\nexport const setScoreOAction = (payload) => ({\r\n  type: ADD_O,\r\n  payload,\r\n})\r\n\r\nexport const resetScoreAction = (payload) => ({\r\n  type: RESET_SCORE,\r\n  payload,\r\n})\r\n","export const checkWinner = (board, player) => {\r\n  if (\r\n    (board[0] === player && board[1] === player && board[2] === player) ||\r\n    (board[3] === player && board[4] === player && board[5] === player) ||\r\n    (board[6] === player && board[7] === player && board[8] === player) ||\r\n    (board[0] === player && board[3] === player && board[6] === player) ||\r\n    (board[1] === player && board[4] === player && board[7] === player) ||\r\n    (board[2] === player && board[5] === player && board[8] === player) ||\r\n    (board[0] === player && board[4] === player && board[8] === player) ||\r\n    (board[2] === player && board[4] === player && board[6] === player)\r\n  ) {\r\n    return true\r\n  }\r\n  return false\r\n}","export const runSymbolO = 'O'\r\nexport const runSymbolX = 'X'","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './Game.css'\r\nimport Field from '../Field/Field'\r\n\r\nimport {\r\n  startNewGameAction,\r\n  changeFieldAction,\r\n} from '../../store/reducers/fieldReducer'\r\n\r\nimport {\r\n  setTurnAction,\r\n  setxIsRunAction,\r\n} from '../../store/reducers/settingsReducer'\r\n\r\nimport {\r\n  setScoreDrawAction,\r\n  setScoreXAction,\r\n  setScoreOAction,\r\n} from '../../store/reducers/scoreReducer'\r\n\r\nimport { checkWinner } from '../../healper'\r\nimport { runSymbolO, runSymbolX } from '../../constants'\r\n\r\nconst Game = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const {xIsRunMenu, xIsRun, turn, isAgainstTheComputer} = useSelector((state) => state.settings)\r\n\r\n  const setxIsRun = (payload) => {\r\n    dispatch(setxIsRunAction(payload))\r\n  }\r\n\r\n  const setTurn = (payload) => {\r\n    dispatch(setTurnAction(payload))\r\n  }\r\n\r\n  const field = useSelector((state) => state.field.field)\r\n  const startNewGame = () => {\r\n    setxIsRun(xIsRunMenu)\r\n    setTurn([])\r\n    dispatch(startNewGameAction())\r\n  }\r\n  const setField = (player, index) => {\r\n    dispatch(changeFieldAction(player, index))\r\n  }\r\n\r\n  const {scoreDraw, scoreX, scoreO} = useSelector((state) => state.score)\r\n  const setScoreDraw = () => {\r\n    dispatch(setScoreDrawAction())\r\n  }\r\n  const setScoreX = () => {\r\n    dispatch(setScoreXAction())\r\n  }\r\n  const setScoreO = () => {\r\n    dispatch(setScoreOAction())\r\n  }  \r\n\r\n  let aiPlayer,\r\n    humanPlayer = undefined\r\n\r\n  if (xIsRun) {\r\n    aiPlayer = runSymbolO\r\n    humanPlayer = runSymbolX\r\n  } else {\r\n    aiPlayer = runSymbolX\r\n    humanPlayer = runSymbolO\r\n  }\r\n\r\n  let fieldWithIndex = [...field]\r\n  for (let i = 0; i < fieldWithIndex.length; i++) {\r\n    if (fieldWithIndex[i] === null) {\r\n      fieldWithIndex[i] = i\r\n    }\r\n  }\r\n\r\n  const findEmptyCells = (board) => {\r\n    return board.filter((s) => s != runSymbolO && s != runSymbolX)\r\n  }\r\n\r\n  let winner = null\r\n  if (checkWinner(field, aiPlayer)) {\r\n    winner = aiPlayer\r\n  } else if (checkWinner(field, humanPlayer)) {\r\n    winner = humanPlayer\r\n  }\r\n\r\n  // set random AI first turn\r\n  if (!xIsRun && isAgainstTheComputer && turn.length === 0) {\r\n    const computerRandomTurn = Math.floor(Math.random() * 9)\r\n    setField(aiPlayer, computerRandomTurn)\r\n\r\n    const fieldCopy = [...field]\r\n    const newTurn = turn\r\n    newTurn.push(fieldCopy[computerRandomTurn])\r\n    setTurn(newTurn)\r\n  }\r\n\r\n  const changeTheScore = () => {\r\n    if (winner === runSymbolX) {\r\n      setScoreX()\r\n    } else if (winner === runSymbolO) {\r\n      setScoreO()\r\n    }\r\n    if (turn.length === 9 && !winner) {\r\n      setScoreDraw()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    changeTheScore()\r\n  }, [turn.length, winner])\r\n\r\n  const handleClick = (index) => {\r\n    const fieldCopy = [...field]\r\n    // ?game-over, ?click\r\n    if (winner || fieldCopy[index]) {\r\n      return null\r\n    }\r\n    // X ? Y\r\n    let player = xIsRun ? runSymbolX : runSymbolO\r\n    // update state\r\n    setField(player, index)\r\n    setxIsRun(!xIsRun)\r\n\r\n    const newTurn = turn\r\n    newTurn.push(fieldCopy[index])\r\n    setTurn(newTurn)\r\n  }\r\n\r\n  const computerTurn = (fieldAfterPlayer) => {\r\n    let fieldCopy = [...fieldAfterPlayer]\r\n    let newTurn = turn\r\n\r\n    fieldWithIndex = [...fieldCopy]\r\n    for (let i = 0; i < fieldCopy.length; i++) {\r\n      if (fieldCopy[i] === null) {\r\n        fieldWithIndex[i] = i\r\n      }\r\n    }\r\n\r\n    let bestMove = searchAlgorithm(fieldWithIndex, aiPlayer)\r\n    if (winner || fieldCopy[bestMove.idx]) return null\r\n\r\n    fieldCopy[bestMove.idx] = !xIsRun ? runSymbolX : runSymbolO\r\n    setField(aiPlayer, bestMove.idx)\r\n    newTurn.push(fieldCopy[bestMove.idx])\r\n    setTurn(newTurn)\r\n  }\r\n\r\n  const playerTurn = (index) => {\r\n    let fieldCopy = [...field]\r\n    let newTurn = turn\r\n    // ?game-over, ?click\r\n    if (winner || fieldCopy[index]) return null\r\n    // X ? Y\r\n    fieldCopy[index] = xIsRun ? runSymbolX : runSymbolO\r\n    setField(humanPlayer, index)\r\n    newTurn.push(fieldCopy[index])\r\n    setTurn(newTurn)\r\n\r\n    if (newTurn.length === 9) {\r\n      if (winner) {\r\n        return null\r\n      }\r\n    } else {\r\n      computerTurn(fieldCopy)\r\n    }\r\n  }\r\n\r\n  const searchAlgorithm = (board, player) => {\r\n    const emptyCells = findEmptyCells(board)\r\n    if (checkWinner(board, humanPlayer)) {\r\n      return { score: -1 }\r\n    } else if (checkWinner(board, aiPlayer)) {\r\n      return { score: 1 }\r\n    } else if (emptyCells.length === 0) {\r\n      return { score: 0 }\r\n    }\r\n\r\n    let moves = []\r\n\r\n    for (let i = 0; i < emptyCells.length; i++) {\r\n      let move = []\r\n      board[emptyCells[i]] = player\r\n      move.idx = emptyCells[i]\r\n      if (player === humanPlayer) {\r\n        const payload = searchAlgorithm(board, aiPlayer)\r\n        move.score = payload.score\r\n      }\r\n      if (player === aiPlayer) {\r\n        const payload = searchAlgorithm(board, humanPlayer)\r\n        move.score = payload.score\r\n      }\r\n      board[emptyCells[i]] = move.idx\r\n      moves.push(move)\r\n    }\r\n\r\n    let bestMove = null\r\n\r\n    if (player === aiPlayer) {\r\n      let bestScore = -Infinity\r\n      for (let i = 0; i < moves.length; i++) {\r\n        if (moves[i].score > bestScore) {\r\n          bestScore = moves[i].score\r\n          bestMove = i\r\n        }\r\n      }\r\n    } else {\r\n      let bestScore = Infinity\r\n      for (let i = 0; i < moves.length; i++) {\r\n        if (moves[i].score < bestScore) {\r\n          bestScore = moves[i].score\r\n          bestMove = i\r\n        }\r\n      }\r\n    }\r\n\r\n    return moves[bestMove]\r\n  }\r\n\r\n  return (\r\n    <div className=\"game-wrapper\">\r\n      <div className=\"score\">\r\n        <div className=\"score_descr\">\r\n          <div>X</div>\r\n          <div>Draw</div>\r\n          <div>O</div>\r\n        </div>\r\n        <div className=\"score_item\">\r\n          <div>{scoreX}</div>\r\n          <div>{scoreDraw}</div>\r\n          <div>{scoreO}</div>\r\n        </div>\r\n      </div>\r\n      <button className=\"start-game__btn\" onClick={() => startNewGame()}>\r\n        Start New Game\r\n      </button>\r\n      <Field\r\n        cells={field}\r\n        handleClick={isAgainstTheComputer ? playerTurn : handleClick}\r\n      />\r\n      <p className=\"field__info\">\r\n        {winner\r\n          ? `${winner} is the winner!`\r\n          : turn.length === 9\r\n            ? 'Draw!'\r\n            : `Your turn: ${xIsRun ? runSymbolX : runSymbolO}`}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport './Menu.css'\r\n\r\nimport {\r\n  setIsAgainstTheComputerAction,\r\n  setMenuActiveAction,\r\n  setxIsRunMenuAction,\r\n  setTurnAction,\r\n  setxIsRunAction,\r\n} from '../../store/reducers/settingsReducer'\r\n\r\nimport { resetScoreAction } from '../../store/reducers/scoreReducer'\r\nimport { startNewGameAction } from '../../store/reducers/fieldReducer'\r\n\r\nconst Menu = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const { turn, isAgainstTheComputer, xIsRun, xIsRunMenu } = useSelector((state) => state.settings)\r\n\r\n  const setIsAgainstTheComputer = (payload) => {\r\n    dispatch(setIsAgainstTheComputerAction(payload))\r\n  }\r\n  const setMenuActive = (payload) => {\r\n    dispatch(setMenuActiveAction(payload))\r\n  }\r\n  \r\n  const setxIsRunMenu = (payload) => {\r\n    dispatch(setxIsRunMenuAction(payload))\r\n  }\r\n\r\n  const setxIsRun = (payload) => {\r\n    dispatch(setxIsRunAction(payload))\r\n  }\r\n  const setTurn = (payload) => {\r\n    dispatch(setTurnAction(payload))\r\n  }\r\n\r\n  const resetScore = () => {\r\n    dispatch(resetScoreAction())\r\n  }\r\n\r\n  const startNewGame = () => {\r\n    setxIsRun(xIsRunMenu)\r\n    setTurn([])\r\n    dispatch(startNewGameAction())\r\n  }\r\n\r\n  let disabledInput = false\r\n  if (turn.length >= 1) {\r\n    disabledInput = true\r\n  } else {\r\n    disabledInput = false\r\n  }\r\n  if (turn.length === 1 && isAgainstTheComputer && !xIsRun) {\r\n    disabledInput = false\r\n  }\r\n\r\n  const handleComputerTurnClick = (e) => {\r\n    setIsAgainstTheComputer(e.target.checked)\r\n    setTurn([])\r\n    resetScore()\r\n    startNewGame()\r\n  }\r\n  const handleXIsRunClick = (e) => {\r\n    setxIsRunMenu(e.target.checked)\r\n    setxIsRun(e.target.checked)\r\n    resetScore()\r\n  }\r\n\r\n  return (\r\n    <div className=\"menu\">\r\n      <div className=\"close-menu__btn\" onClick={() => setMenuActive(false)}>\r\n        X\r\n      </div>\r\n      <div className=\"main-menu__content\">\r\n        <div className=\"title\">\r\n          <h1>Tic Tac Toe Settings</h1>\r\n        </div>\r\n\r\n        {disabledInput && (\r\n          <div className=\"apply-changes\">\r\n            Please, start a new game to change the settings\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"content-item chekbox-content__item\">\r\n          <label htmlFor=\"computerTurn\">Player VS Bot: </label>\r\n          <input\r\n            id=\"computerTurn\"\r\n            type=\"checkbox\"\r\n            disabled={disabledInput}\r\n            checked={isAgainstTheComputer}\r\n            onChange={handleComputerTurnClick}\r\n          />\r\n        </div>\r\n        <div className=\"content-item chekbox-content__item\">\r\n          <label htmlFor=\"xIsRun\">X runs first: </label>\r\n          <input\r\n            className=\"chekbox-content__item\"\r\n            id=\"xIsRun\"\r\n            type=\"checkbox\"\r\n            disabled={disabledInput}\r\n            checked={xIsRunMenu}\r\n            onChange={handleXIsRunClick}\r\n            onClick={() => (turn.length === 1 ? startNewGame() : null)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport './App.css'\n\nimport Game from './components/Game/Game'\nimport Menu from './components/Menu/Menu'\n\nimport { setMenuActiveAction } from './store/reducers/settingsReducer'\n\nfunction App() {\n  const dispatch = useDispatch()\n\n  const menuActive = useSelector((state) => state.settings.menuActive)\n  const setMenuActive = (payload) => {\n    dispatch(setMenuActiveAction(payload))\n  }\n\n  return (\n    <div className=\"main-page\">\n      <div\n        className=\"menu__settings-logo\"\n        onClick={() => setMenuActive(!menuActive)}\n      >\n        <img\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6d/Windows_Settings_app_icon.png/768px-Windows_Settings_app_icon.png\"\n          alt=\"\"\n        />\n      </div>\n      <div className={menuActive ? 'main-menu active' : 'main-menu'}>\n        <Menu />\n      </div>\n      <Game />\n    </div>\n  )\n}\n\nexport default App\n","import { combineReducers } from 'redux'\r\n\r\nimport { scoreReducer } from './scoreReducer'\r\nimport { settingsReducer } from './settingsReducer'\r\nimport { fieldReducer } from './fieldReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n  score: scoreReducer,\r\n  settings: settingsReducer,\r\n  field: fieldReducer,\r\n})\r\n","import { createStore } from 'redux'\r\nimport { rootReducer } from './reducers/rootReducer'\r\n\r\nexport const store = createStore(rootReducer)\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport { store } from './store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}